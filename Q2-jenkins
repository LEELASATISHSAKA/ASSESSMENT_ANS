pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    // here you have to provide git checkout pipeline syntax generated by jenkins //
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    sh '''  mvn validate
                            mvn compile
                            mvn test
                            mvn package '''
                }
            }
        }
    }
}


-->Here iam providing basic pipeline script for developers code.
--> We can place this pipeline code in Jenkinsfile(which is placed in github) or else we can place this in direct pipeline script.


#Here i am using GitHub as source code managemnet
-->Launch an instance and connect that instance with mobaxterm by public ip address and pem file.
--> install jenkins, maven, git,java in that session.
--> add port number 8080 in instance security gorups and make sure that jenkins is accessing.
--> connect source code(Git) with jenkins(Provide git repository code in jenkins and generate pipeline syntax code for that git url, and place that pipeine syntax code in pipeline for pulling code)
#here establishing connection between Git and jenkins.we can also make connection automation by using webhooks.


#And the code is processed by using buildnow option.
---> As you asked for unit testing
--> we can do unit testing by using Junit
-->these reports are existed in target/surefire-reports
--> if we are doing unit test we have to involve the junit stage in pipeline (like the below pipeline code)

stage('Unit Test') {
            steps {
                script {
                    // Run JUnit tests and publish the results
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }


-->We can use Tomcat for staging environment. Staging is an immediate step in between deployment and production
--> we have to put that "Staging" stage in our pipeine as below code.It  will copy the files in our source path to the destination path of tomcat.

stage('Deploy to Staging') {
    steps {
        script {
            sh 'echo "Deploying to Staging..."'
            sh 'cp target/your-app.war /path/to/tomcat/webapps'
        }
    }
}


==============================================================================
==============================================================================



pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    // here you have to provide git checkout pipeline syntax generated by jenkins //
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    sh '''  mvn validate
                            mvn compile
                            mvn test
                            mvn package '''
                }
            }
        }
    }
}


-->Here iam providing basic pipeline script for developers code.
--> We can place this pipeline code in Jenkinsfile(which is placed in github) or else we can place this in direct pipeline script.


#Here i am using GitHub as source code managemnet
-->Launch an instance and connect that instance with mobaxterm by public ip address and pem file.
--> install jenkins, maven, git,java in that session.
--> add port number 8080 in instance security gorups and make sure that jenkins is accessing.
--> connect source code(Git) with jenkins(Provide git repository code in jenkins and generate pipeline syntax code for that git url, and place that pipeine syntax code in pipeline for pulling code)
#here establishing connection between Git and jenkins.we can also make connection automation by using webhooks.


#And the code is processed by using buildnow option.
---> As you asked for unit testing
--> we can do unit testing by using Junit
-->these reports are existed in target/surefire-reports
--> if we are doing unit test we have to involve the junit stage in pipeline (like the below pipeline code)

stage('Unit Test') {
            steps {
                script {
                    // Run JUnit tests and publish the results
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }


-->We can use Tomcat for staging environment. Staging is an immediate step in between deployment and production
--> we have to put that "Staging" stage in our pipeine as below code.It  will copy the files in our source path to the destination path of tomcat.

stage('Deploy to Staging') {
    steps {
        script {
            sh 'echo "Deploying to Staging..."'
            sh 'cp target/your-app.war /path/to/tomcat/webapps'
        }
    }
}




